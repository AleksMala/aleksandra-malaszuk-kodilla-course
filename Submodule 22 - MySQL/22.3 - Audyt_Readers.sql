CREATE TABLE READERS_AUD(
EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
EVENT_DATE DATETIME NOT NULL,
EVENT_TYPE VARCHAR(50) DEFAULT NULL,
READER_ID INT(11) NOT NULL,
NEW_FIRSTNAME VARCHAR(50),
OLD_FIRSTNAME VARCHAR(50),
NEW_LASTNAME VARCHAR(50),
OLD_LASTNAME VARCHAR(50),
NEW_PESELID VARCHAR(11),
OLD_PESELID VARCHAR(11),
NEW_VIP_LEVEL VARCHAR(50),
OLD_VIP_LEVEL VARCHAR(50),
PRIMARY KEY (EVENT_ID)
);


DROP TRIGGER IF EXISTS READERS_INSERT;

DELIMITER $$

CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
FOR EACH ROW
BEGIN

	INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME,
				NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL)
    VALUES (CURTIME(), "INSERT", NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID,
			NEW.VIP_LEVEL);
END $$

DELIMITER ;


DROP TRIGGER IF EXISTS READERS_DELETE;
DELIMITER $$

CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
FOR EACH ROW
BEGIN
	INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
    VALUES (CURTIME(), "DELETE", OLD.READER_ID);
END $$

DELIMITER ;


DROP TRIGGER IF EXISTS READERS_UPDATE;

DELIMITER $$

CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
FOR EACH ROW
BEGIN
	INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME,
							NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL,
							OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID, OLD_VIP_LEVEL)
		VALUES (CURTIME(), "UPDATE", OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME,
				NEW.PESELID, NEW.VIP_LEVEL,
				OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);

END $$

DELIMITER ;


