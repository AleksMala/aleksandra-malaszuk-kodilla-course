DROP PROCEDURE IF EXISTS UpdateBestsellers;

DELIMITER $$

CREATE PROCEDURE UpdateBestsellers()
BEGIN
	DECLARE COUNT_BESTSELLERS, DAYS INT;
    DECLARE BST_ID, BOOKSCOUNT INT;
    DECLARE FINISHED INT DEFAULT 0;
    DECLARE ALL_BESTSELLERS CURSOR FOR SELECT BOOK_ID FROM BOOKS;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET FINISHED = 1;
    OPEN ALL_BESTSELLERS;
    WHILE (FINISHED = 0) DO
		FETCH ALL_BESTSELLERS INTO BST_ID;
        IF (FINISHED = 0) THEN 
			SELECT COUNT(*) FROM RENTS
			WHERE BOOK_ID = BST_ID
			INTO BOOKSCOUNT;
		SELECT DATEDIFF(MAX(RENT_DATE), MIN(RENT_DATE)) + 1 FROM RENTS
        WHERE BOOK_ID = BST_ID
        INTO DAYS;
          SET COUNT_BESTSELLERS = BOOKSCOUNT / (ceil(DAYS / 30));
        UPDATE BOOKS SET BESTSELLERS = Bestsellers(COUNT_BESTSELLERS)
			WHERE BOOK_ID = BST_ID;
    COMMIT;
    END IF;
    END WHILE;
            CLOSE ALL_BESTSELLERS;
END $$

DELIMITER ;


DROP FUNCTION IF EXISTS Bestsellers;
DELIMITER $$

CREATE FUNCTION Bestsellers(booksreaded INT) RETURNS BOOLEAN

BEGIN
DECLARE result BOOLEAN;
	IF booksreaded > 2 THEN
		SET result = TRUE;
	ELSE
		SET result = FALSE;
	END IF;
	RETURN result;
END$$

DELIMITER ;